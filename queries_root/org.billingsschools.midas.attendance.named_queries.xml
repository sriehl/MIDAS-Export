<?xml version="1.0"?>
<queries>
  <query name="org.billingsschools.midas.attendance" coreTable="ATTENDANCE" flattened="true" tags="">
    <summary>MIDAS Attendance</summary>
    <description>MIDAS Attendance data</description>
    <columns>
      <column column="STUDENTS.ID">user_id</column>
      <column column="ATTENDANCE.ATTENDANCE_CODEID">days_absent</column>
      <column column="ATTENDANCE.ATTENDANCE_CODEID">days_tardy</column>
      <column column="ATTENDANCE.ATTENDANCE_CODEID">unexcused_absences</column>
      <column column="ATTENDANCE.ATTENDANCE_CODEID">excused_absences</column>
    </columns>
    <sql>
      <![CDATA[
        with dates as (
          select
              terms.firstday
            , terms.lastday
            , terms.yearid
          from
            terms
          where
            terms.id = (extract(year from sysdate) + case when extract(month from sysdate) >= 7 then 1 else 0 end - 1991) * 100
            and terms.schoolid = 0
            and terms.isyearrec = 1
        )

        , days_absent as (
          select
              ps_membership_defaults.studentid
            , sum(ps_membership_defaults.studentmembership * (ps_membership_defaults.periods_absent / ps_membership_defaults.potential_periods_present)) days_absent
          from
            dates
            left join ps_membership_defaults
              on ps_membership_defaults.yearid = dates.yearid
          where
            ps_membership_defaults.potential_periods_present > 0
          group by
            ps_membership_defaults.studentid
        )

        , all_attendance as (
          select
              attendance.studentid
            , case when attendance_code.att_code in ('T', 'ET', 'MT') then 1 else 0 end tardy
            , case when attendance_code.att_code in ('A', 'U') then 1 else 0 end unexcused
            , case when attendance_code.att_code in ('EO', 'C', 'D', 'E', 'H', 'M', 'N', 'G', 'O', 'W', 'I') then 1 else 0 end excused
          from
            dates
            left join attendance
              on attendance.yearid = dates.yearid
            left join attendance_code
              on attendance_code.id = attendance.attendance_codeid
        )

        , attendance_summary as (
          select
              studentid
            , sum(tardy) tardies
            , sum(unexcused) unexcused
            , sum(excused) excused
          from
            all_attendance
          group by
            studentid
        )

        select
            students.psguid "user_id"
          , to_char(days_absent.days_absent, 'FM990.000') "days_absent"
          , coalesce(attendance_summary.tardies, 0) "days_tardy"
          , coalesce(attendance_summary.unexcused, 0) "unexcused_absences"
          , coalesce(attendance_summary.excused, 0) "excused_absences"
        from
          students
          left join (select * from days_absent) days_absent
            on days_absent.studentid = students.id
          left join (select * from attendance_summary) attendance_summary
            on attendance_summary.studentid = students.id
        where
          students.enroll_status in (0)
      ]]>
    </sql>
  </query>
</queries>
